/* version: 1.0.3 */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t(require("vue")):"function"==typeof define&&define.amd?define(["vue"],t):(e="undefined"!=typeof globalThis?globalThis:e||self)["VUE-REACTIVE-DATASET"]=t(e.Vue)}(this,(function(e){"use strict";class t{max;cache;constructor(e=0){this.max=e,this.cache=new Map}get(e){const t=this.cache.get(e);return t&&(this.delete(e),this.set(e,t)),t}set(e,t){0!==this.max&&this.cache.size===this.max&&this.delete(this.keys()[0]),this.cache.set(e,t)}delete(e){return this.cache.delete(e)}clear(){return this.cache.clear()}has(e){return this.cache.has(e)}keys(){return Array.from(this.cache.keys())}}const{stringify:s}=JSON;function r(e,r){const i=new t(r),n=function(...t){if(0===t.length)return e.call(this);const r=s(t);let n=i.get(r);return n||(n=e.call(this,...t),i.set(r,n)),n};return n.delete=function(...e){return i.delete(s(e))},n.clear=function(){return i.clear()},n}class i{store;constructor(){this.store=e.reactive({})}set(e,t){this.store[e]=t}get(e){return this.store[e]}has(e){return Reflect.has(this.store,e)}delete(e){return Reflect.deleteProperty(this.store,e)}}return class{options;store;memoFetch;memoFilter;constructor(e){e.max=e.max||100,this.options=e,this.store=new i,this.memoFetch=r(this.fetch,this.options.max),this.memoFilter=r(this.handleFilter,1e3)}get(e){const{name:t,promise:s,params:r}=e,i=this.memoFetch(t,JSON.stringify(r));return s?i:this.store.get(this.getFullname(t,r))}async fetch(e,t){const s=t?JSON.parse(t):t,r=this.options.config?.[e]?.data;if("function"==typeof r){const t=await r(s);return this.store.set(this.getFullname(e,s),t),t}}delete(e){const{name:t,params:s}=e;this.memoFetch.delete(t,JSON.stringify(s)),this.memoFilter.clear()}clear(){this.memoFetch.clear(),this.memoFilter.clear()}filter(e){const{name:t,promise:s,params:r}=e;if(s)return this.get({name:t,promise:s,params:r}).then((()=>this.getValue(e)));{this.get({name:t,promise:s,params:r});const i=e.defaultValue;return this.store.get(this.getFullname(t,r))&&this.getValue(e)||i}}handleFilter(e,t,s){const r=this.getProps(e),i=[...this.store.get(t)];let n=null;for(;n=i.shift();){if(n[r.value]===s)return n;{const e=n[r.children]||[];i.push(...e)}}return null}getProps(e){return Object.assign({},{name:"name",value:"value",children:"children"},this.options.config[e].props)}getValue(e){const{name:t,value:s,original:r,fields:i,params:n}=e,a=this.getProps(t),o=this.memoFilter(t,this.getFullname(t,n),s);return o?r?o:Array.isArray(i)?i.map((e=>o[e])):o[a.name]:null}getFullname(e,t){return t?`${e}_${JSON.stringify(t)}`:e}}}));
